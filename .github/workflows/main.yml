name: CI

on: [push]

env:
  air-sdk-path: ${{ github.workspace }}\air_sdk
  air-sdk-version: "32.0"

jobs:
  build-on-win:
    runs-on: [windows-latest]
    env:
      air-sdk-path: ${{ github.workspace }}\air_sdk
      air-sdk-version: "32.0"
      visual-studio-path: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise"
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache AIR SDK
      id: cache-air-sdk
      uses: actions/cache@v1
      env:
        cache-name: cache-air-sdk
      with:
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.air-sdk-version }}
        path: ${{ env.air-sdk-path }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.air-sdk-version }}
          ${{ runner.os }}-build-${{ env.cache-name }}
    - name: Download AIR SDK
      if: steps.cache-air-sdk.outputs.cache-hit != 'true'
      run: |
        New-Item -Name ".\air_sdk" -ItemType "directory" -Force | Out-Null
        Invoke-WebRequest "http://airdownload.adobe.com/air/win/download/${env:air-sdk-version}/AIRSDK_Compiler.zip" -OutFile ".\AIRSDK_Compiler.zip"
        Expand-Archive -Path ".\AIRSDK_Compiler.zip" -DestinationPath "${{ env.air-sdk-path }}" | Out-Null
        echo AIR SDK expanded into "${{ env.air-sdk-path }}"
    - name: Copy keystore.p12
      id: copy_keystore
      uses: timheuer/base64-to-file@v1.0.3
      with: 
        fileName: keystore.p12
        encodedString: ${{ secrets.keystore }}
    - name: Build Script
      working-directory: build
      run: ant -debug -verbose -noinput "-Dair.sdk=${{ env.air-sdk-path }}" "-Dkeystore.file=${{ steps.copy_keystore.outputs.filePath }}" "-Dkeystore.password=${{ secrets.password }}" "-Dvisual.studio=${{ env.visual-studio-path }}" "-Dis.debug=false" "-Dbuild.number=${{ github.run_number }}" win
    - uses: actions/upload-artifact@v1
      with:
        name: ANXOpenSSL32.dll
        path: build/temp/win32/ANXOpenSSL.dll
    - uses: actions/upload-artifact@v1
      with:
        name: ANXOpenSSL64.dll
        path: build/temp/win64/ANXOpenSSL.dll

  package:
    runs-on: [macos-latest]
    needs: [build-on-win]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache AIR SDK
      id: cache-air-sdk
      uses: actions/cache@v1
      env:
        cache-name: cache-air-sdk
      with:
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.air-sdk-version }}
        path: ${{ env.air-sdk-path }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.air-sdk-version }}
          ${{ runner.os }}-build-${{ env.cache-name }}
    - name: Download AIR SDK
      if: steps.cache-air-sdk.outputs.cache-hit != 'true'
      run: |
        mkdir -p ${{ env.air-sdk-path }}
        wget -O AIRSDK_Compiler.dmg https://airdownload.adobe.com/air/mac/download/${{ env.air-sdk-version }}/AIRSDK_Compiler.dmg
        hdiutil attach AIRSDK_Compiler.dmg -nobrowse
        cp -rf /Volumes/AIR\ SDK/* ${{ env.air-sdk-path }}
    - name: Install ANT
      run: brew install ant
    - name: Copy keystore.p12
      id: copy_keystore
      uses: timheuer/base64-to-file@v1.0.3
      with: 
        fileName: keystore.p12
        encodedString: ${{ secrets.keystore }}
    - uses: actions/download-artifact@v1
      with:
        name: ANXOpenSSL32.dll
        path: build/temp/win32
    - uses: actions/download-artifact@v1
      with:
        name: ANXOpenSSL64.dll
        path: build/temp/win64
    - name: Install Dependences
      run: |
        cd openssl-xcode/OpenSSL
        pod install
      shell: bash
    - name: Build Script
      working-directory: build
      run: ant -debug -verbose -noinput -Dair.sdk=${{ env.air-sdk-path }} -Dkeystore.file=${{ steps.copy_keystore.outputs.filePath }} -Dkeystore.password=${{ secrets.password }} -Dis.debug=false -Dbuild.number=${{ github.run_number }}
    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload ANE Release Asset
      id: upload-release-ane 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./bin/com.github.airext.OpenSSL.ane
        asset_name: com.github.airext.OpenSSL.ane
        asset_content_type: application/vnd.adobe.air-native-extension-package+zip
    - name: Upload SWC Release Asset
      id: upload-release-swc 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./bin/com.github.airext.OpenSSL.swc
        asset_name: com.github.airext.OpenSSL.swc
        asset_content_type: application/zip









